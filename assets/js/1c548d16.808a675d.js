"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9421],{738:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>b,default:()=>v,frontMatter:()=>f,metadata:()=>r,toc:()=>x});const r=JSON.parse('{"id":"LeetCode/Check if One String Swap Can Make Strings Equal/README","title":"1790. Check if One String Swap Can Make Strings Equal","description":"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.","source":"@site/docs/LeetCode/1790. Check if One String Swap Can Make Strings Equal/README.mdx","sourceDirName":"LeetCode/1790. Check if One String Swap Can Make Strings Equal","slug":"/LeetCode/Check if One String Swap Can Make Strings Equal/","permalink":"/problem-solving/LeetCode/Check if One String Swap Can Make Strings Equal/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Easy","permalink":"/problem-solving/tags/easy"},{"inline":true,"label":"Hash Table","permalink":"/problem-solving/tags/hash-table"},{"inline":true,"label":"String","permalink":"/problem-solving/tags/string"},{"inline":true,"label":"Counting","permalink":"/problem-solving/tags/counting"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1761237301000,"frontMatter":{"title":"1790. Check if One String Swap Can Make Strings Equal","description":"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.","keywords":["LeetCode","1790. Check if One String Swap Can Make Strings Equal","Easy","Hash Table","String","Counting"],"tags":["LeetCode","Easy","Hash Table","String","Counting"]},"sidebar":"tutorialSidebar","previous":{"title":"1752. Check if Array Is Sorted and Rotated","permalink":"/problem-solving/LeetCode/Check if Array Is Sorted and Rotated/"},"next":{"title":"1800. Maximum Ascending Subarray Sum","permalink":"/problem-solving/LeetCode/Maximum Ascending Subarray Sum/"}}');var a=t(4848),s=t(8453),i=t(1470),l=t(9365),o=t(3457),u=t(2693);const c="/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\nvar areAlmostEqual = function (s1, s2) {\n  const arr = [];\n\n  for (let i = 0; i < s1.length; i++) {\n    if (s1[i] !== s2[i]) {\n      arr.push(i);\n    }\n  }\n\n  if (arr.length === 2) {\n    return s1[arr[0]] === s2[arr[1]] && s1[arr[1]] === s2[arr[0]];\n  }\n\n  return arr.length === 0;\n};\n";function d(e){const n={br:"br",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(n.p,{children:["You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices.",(0,a.jsx)(n.br,{}),"\n","Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false."]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function p(e){const n={blockquote:"blockquote",br:"br",code:"code",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"}),' s1 = "bank", s2 = "kanb"',(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," true",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Explanation:"}),' For example, swap the first character with the last character of s2 to make "bank".']}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"}),' s1 = "attack", s2 = "defend"',(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," false",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Explanation:"})," It is impossible to make them equal with one string swap."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-3",children:"Example 3:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"}),' s1 = "kelb", s2 = "kelb"',(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," true",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Explanation:"})," The two strings are already equal, so no string swap operation is required."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1 <= s1.length, s2.length <= 100\ns1.length == s2.length\ns1 and s2 consist of only lowercase English letters.\n"})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}const f={title:"1790. Check if One String Swap Can Make Strings Equal",description:"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices. Return true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.",keywords:["LeetCode","1790. Check if One String Swap Can Make Strings Equal","Easy","Hash Table","String","Counting"],tags:["LeetCode","Easy","Hash Table","String","Counting"]},b="frontMatter.title",m={},x=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Example 3:",id:"example-3",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:2},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:2}];function w(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"frontmattertitle",children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/check-if-one-string-swap-can-make-strings-equal",children:f.title})})}),"\n","\n",(0,a.jsx)(u.A,{difficulty:"Easy"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,a.jsxs)(t,{open:!0,children:[(0,a.jsx)("summary",{children:"Description"}),(0,a.jsx)(h,{}),(0,a.jsx)(g,{})]})}),(0,a.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,a.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,a.jsx)(o.A,{language:"js",children:c})]})]}),"\n",(0,a.jsx)(n.h2,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,a.jsx)(n.p,{children:"\u56e0\u70ba\u5169\u500b\u5b57\u4e32\u4e00\u6a23\u9577\u6240\u4ee5\u53ef\u4ee5\u5beb\u5728\u540c\u500b for \u8ff4\u5708\u88e1\u9762\uff0c\u5148\u662f\u66b4\u529b\u904d\u6b77\u9663\u5217\u627e\u51fa\u5169\u500b\u5b57\u4e32\u7684\u5dee\u7570\u662f\u5728\u7b2c i \u500b\u4f4d\u7f6e\u4e26\u8a18\u9304\u5230 arr\uff0c\u5982\u679c arr \u7b49\u65bc 2 \u7684\u8a71\u5c31\u6bd4\u8f03\u5169\u500b\u5b57\u4e32\u7684\u90a3\u5169\u500b\u4ea4\u63db\u4f4d\u7f6e\u4e4b\u5f8c\u662f\u4e0d\u662f\u76f8\u7b49\uff0c\u662f\u7684\u8a71\u5c31 true\u3002\u9084\u6709\u500b\u72c0\u6cc1\u662f\u5169\u500b\u5b57\u4e32\u4e00\u958b\u59cb\u5c31\u4e00\u6a23\u6240\u4ee5 arr \u6703\u662f 0\uff0c\u9019\u6a23\u76f4\u63a5\u56de\u50b3 true \u5c31\u597d\u3002arr \u9577\u5ea6\u9664\u4e86 2 \u548c 0 \u4ee5\u5916\u5c31\u90fd\u662f false"}),"\n",(0,a.jsx)(n.h2,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,a.jsx)(n.p,{children:"\u539f\u672c\u60f3\u7528 Set \u7684\u8cc7\u6599\u7d50\u69cb\u4f46\u767c\u73fe\u4e00\u822c\u7684\u9663\u5217 array \u5c31\u5920\u4e86"})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(w,{...e})}):w(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const a={tabItem:"tabItem_Ymn6"};var s=t(4848);function i({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,t),hidden:n,children:e})}},1470:(e,n,t)=>{t.d(n,{A:()=>y});var r=t(6540),a=t(4164),s=t(7559),i=t(3104),l=t(6347),o=t(205),u=t(7485),c=t(1682),d=t(679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r})))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g({value:e,tabValues:n}){return n.some((n=>n.value===e))}function f({queryString:e=!1,groupId:n}){const t=(0,l.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(t.location.search);n.set(a,e),t.replace({...t.location,search:n.toString()})}),[a,t])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=p(e),[i,l]=(0,r.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find((e=>e.default))??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:s}))),[u,c]=f({queryString:t,groupId:a}),[h,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,a]=(0,d.Dv)(n);return[t,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),m=(()=>{const e=u??h;return g({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),b(e)}),[c,b,s]),tabValues:s}}var m=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=t(4848);function v({className:e,block:n,selectedValue:t,selectValue:r,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,i.a_)(),u=e=>{const n=e.currentTarget,a=l.indexOf(n),i=s[a].value;i!==t&&(o(n),r(i))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:r})=>(0,w.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:u,...r,className:(0,a.A)("tabs__item",x.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e)))})}function k({lazy:e,children:n,selectedValue:t}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function j(e){const n=b(e);return(0,w.jsxs)("div",{className:(0,a.A)(s.G.tabs.container,"tabs-container",x.tabList),children:[(0,w.jsx)(v,{...n,...e}),(0,w.jsx)(k,{...n,...e})]})}function y(e){const n=(0,m.A)();return(0,w.jsx)(j,{...e,children:h(e.children)},String(n))}},2693:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var r=t(7293),a=t(4848);const s=({difficulty:e,kyu:n})=>{let t=e;n&&(n>=5&&n<=8?t="Easy":n>=3&&n<=4?t="Medium":n>=1&&n<=2&&(t="Hard"));const s=t?{Easy:"tip",Medium:"warning",Hard:"danger"}[t]:"tip",i=t?n?`${n} kyu`:t:"";return(0,a.jsx)(r.A,{type:s,icon:null,title:i,children:(0,a.jsx)(a.Fragment,{})})}}}]);