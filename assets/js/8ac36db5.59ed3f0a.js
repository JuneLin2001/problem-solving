"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9005],{9938:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>b,contentTitle:()=>j,default:()=>v,frontMatter:()=>g,metadata:()=>t,toc:()=>y});const t=JSON.parse('{"id":"LeetCode/Binary Search/README","title":"704. Binary Search","description":"Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.","source":"@site/docs/LeetCode/704. Binary Search/README.mdx","sourceDirName":"LeetCode/704. Binary Search","slug":"/LeetCode/Binary Search/","permalink":"/problem-solving/LeetCode/Binary Search/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Easy","permalink":"/problem-solving/tags/easy"},{"inline":true,"label":"Array","permalink":"/problem-solving/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/problem-solving/tags/binary-search"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1761234415000,"frontMatter":{"title":"704. Binary Search","description":"Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.","keywords":["LeetCode","704. Binary Search","Easy","Array","Binary Search"],"tags":["LeetCode","Easy","Array","Binary Search"]},"sidebar":"tutorialSidebar","previous":{"title":"509. Fibonacci Number","permalink":"/problem-solving/LeetCode/Fibonacci Number/"},"next":{"title":"1346. Check If N and Its Double Exist","permalink":"/problem-solving/LeetCode/Check If N and Its Double Exist/"}}');var i=r(4848),s=r(8453),a=r(1470),l=r(9365),o=r(3457),c=r(2693);const d="/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar search = function (nums, target) {\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n",u="function search(nums: number[], target: number): number {\n  let min = 0;\n  let max = nums.length - 1;\n\n  while (min <= max) {\n    let middle = Math.floor((max + min) / 2);\n    if (target > nums[middle]) {\n      min = middle + 1;\n    } else if (target < nums[middle]) {\n      max = middle - 1;\n    } else if (target === nums[middle]) {\n      return middle;\n    }\n  }\n  return -1;\n}\n";function h(e){const n={br:"br",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,"}),"\n",(0,i.jsxs)(n.p,{children:["F(0) = 0, F(1) = 1",(0,i.jsx)(n.br,{}),"\n","F(n) = F(n - 1) + F(n - 2), for n > 1.",(0,i.jsx)(n.br,{}),"\n","Given n, calculate F(n)."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function x(e){const n={blockquote:"blockquote",br:"br",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input:"})," nums = [-1,0,3,5,9,12], target = 9",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Output:"})," 4",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Explanation:"})," 9 exists in nums and its index is 4"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Input:"})," nums = [-1,0,3,5,9,12], target = 2",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Output:"})," -1",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Explanation:"})," 2 does not exist in nums so return -1"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"constraints",children:"Constraints:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"1 <= nums.length <= 104\n-104 < nums[i], target < 104\nAll the integers in nums are unique.\nnums is sorted in ascending order.\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}const g={title:"704. Binary Search",description:"Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1. You must write an algorithm with O(log n) runtime complexity.",keywords:["LeetCode","704. Binary Search","Easy","Array","Binary Search"],tags:["LeetCode","Easy","Array","Binary Search"]},j="frontMatter.title",b={},y=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:2},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:2},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:2}];function f(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"frontmattertitle",children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/binary-search/",children:g.title})})}),"\n","\n",(0,i.jsx)(c.A,{difficulty:"Easy"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,i.jsxs)(r,{open:!0,children:[(0,i.jsx)("summary",{children:"Description"}),(0,i.jsx)(m,{}),(0,i.jsx)(p,{})]})}),(0,i.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,i.jsxs)(a.A,{children:[(0,i.jsx)(l.A,{value:"description",label:"js",default:!0,children:(0,i.jsx)(o.A,{language:"js",children:d})}),(0,i.jsx)(l.A,{value:"solution",label:"ts",children:(0,i.jsx)(o.A,{language:"ts",children:u})})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,i.jsxs)(n.p,{children:["\u4f86\u7df4\u7fd2\u4e00\u4e0b\u7d93\u5178\u984c\uff0c\u8a66\u4e86\u5169\u7a2e\u89e3\u6cd5\u5206\u5225\u5225\u653e\u5728 js \u548c ts \u3002",(0,i.jsx)(n.br,{}),"\n","js \u662f\u5f9e\u982d\u958b\u59cb\u66b4\u529b\u904d\u6b77\u9663\u5217\u7684 Linear Search\uff0cts \u5247\u662f\u6548\u80fd\u8f03\u597d\u7684 Binary Search\u3002",(0,i.jsx)(n.br,{}),"\n","\u800c\u984c\u76ee\u63cf\u8ff0\u6709\u63d0\u5230 ",(0,i.jsx)(n.code,{children:"You must write an algorithm with O(log n) runtime complexity."}),(0,i.jsx)(n.br,{}),"\n","\u6240\u4ee5\u771f\u6b63\u7684\u6b63\u89e3\u6703\u662f Binary Search \u7684\u4f5c\u6cd5\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,i.jsxs)(n.p,{children:["\u770b\u4e86 ",(0,i.jsx)(n.a,{href:"https://www.udemy.com/course/algorithm-data-structure",children:"Wilson Ren \u7684 \u8cc7\u6599\u7d50\u69cb\u8207\u6f14\u7b97\u6cd5 (JavaScript)"})," \u5c31\u99ac\u4e0a\u4f86\u8a66\u4e00\u4e0b\u7df4\u7df4\u624b\uff0c\u597d\u8036\uff01"]})]})}function v(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}},2693:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var t=r(7293),i=r(4848);const s=({difficulty:e,kyu:n})=>{let r=e;n&&(n>=5&&n<=8?r="Easy":n>=3&&n<=4?r="Medium":n>=1&&n<=2&&(r="Hard"));const s=r?{Easy:"tip",Medium:"warning",Hard:"danger"}[r]:"tip",a=r?n?`${n} kyu`:r:"";return(0,i.jsx)(t.A,{type:s,icon:null,title:a,children:(0,i.jsx)(i.Fragment,{})})}}}]);