"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1960],{2123:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>b,default:()=>y,frontMatter:()=>j,metadata:()=>t,toc:()=>f});const t=JSON.parse('{"id":"LeetCode/Adjacent Increasing Subarrays Detection II/README","title":"3350. Adjacent Increasing Subarrays Detection II","description":"Given an array nums of n integers, your task is to find the maximum value of k for which there exist two adjacent subarrays of length k each, such that both subarrays are strictly increasing. Specifically, check if there are two subarrays of length k starting at indices a and b (a < b)","source":"@site/docs/LeetCode/3350. Adjacent Increasing Subarrays Detection II/README.mdx","sourceDirName":"LeetCode/3350. Adjacent Increasing Subarrays Detection II","slug":"/LeetCode/Adjacent Increasing Subarrays Detection II/","permalink":"/problem-solving/LeetCode/Adjacent Increasing Subarrays Detection II/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Medium","permalink":"/problem-solving/tags/medium"},{"inline":true,"label":"Array","permalink":"/problem-solving/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/problem-solving/tags/binary-search"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1760570390000,"frontMatter":{"title":"3350. Adjacent Increasing Subarrays Detection II","description":"Given an array nums of n integers, your task is to find the maximum value of k for which there exist two adjacent subarrays of length k each, such that both subarrays are strictly increasing. Specifically, check if there are two subarrays of length k starting at indices a and b (a < b)","keywords":["LeetCode","3350. Adjacent Increasing Subarrays Detection II","Medium","Array","Binary Search"],"tags":["LeetCode","Medium","Array","Binary Search"]},"sidebar":"tutorialSidebar","previous":{"title":"3349. Adjacent Increasing Subarrays Detection I","permalink":"/problem-solving/LeetCode/Adjacent Increasing Subarrays Detection I/"},"next":{"title":"3397. Maximum Number of Distinct Elements After Operations","permalink":"/problem-solving/LeetCode/Maximum Number of Distinct Elements After Operations/"}}');var s=r(4848),a=r(8453),i=r(1470),l=r(9365),c=r(3457),o=r(2693);const u="/**\n * @param {number[]} nums\n * @return {number}\n */\nvar maxIncreasingSubarrays = function (nums) {\n  if (nums.length <= 1) {\n    return 0;\n  }\n\n  let count = 1;\n  let preCount = 0;\n  let result = 1;\n\n  for (let i = 1; i < nums.length; i++) {\n    if (nums[i] > nums[i - 1]) {\n      count++;\n    } else {\n      result = Math.max(result, Math.floor(count / 2));\n      result = Math.max(result, Math.min(count, preCount));\n      preCount = count;\n      count = 1;\n    }\n  }\n\n  result = Math.max(result, Math.floor(count / 2));\n  result = Math.max(result, Math.min(count, preCount));\n\n  return result;\n};\n";function d(e){const n={li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Given an array nums of n integers, your task is to find the maximum value of k for which there exist two adjacent subarrays of length k each, such that both subarrays are strictly increasing. Specifically, check if there are two subarrays of length k starting at indices a and b (a < b), where:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Both subarrays nums[a..a + k - 1] and nums[b..b + k - 1] are strictly increasing."}),"\n",(0,s.jsx)(n.li,{children:"The subarrays must be adjacent, meaning b = a + k."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Return the maximum possible value of k."}),"\n",(0,s.jsx)(n.p,{children:"A subarray is a contiguous non-empty sequence of elements within an array."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function x(e){const n={blockquote:"blockquote",br:"br",code:"code",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Input:"})," nums = [2,5,7,8,9,2,3,4,3,1]",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Output:"})," 3",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Explanation:"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The subarray starting at index 2 is ",(0,s.jsx)(n.code,{children:"[7, 8, 9]"}),", which is strictly increasing."]}),"\n",(0,s.jsxs)(n.li,{children:["The subarray starting at index 5 is ",(0,s.jsx)(n.code,{children:"[2, 3, 4]"}),", which is also strictly increasing."]}),"\n",(0,s.jsx)(n.li,{children:"These two subarrays are adjacent, and 3 is the maximum possible value of k for which two such adjacent strictly increasing subarrays exist."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Input:"})," nums = [1,2,3,4,4,4,4,5,6,7]",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Output:"})," 2\n",(0,s.jsx)(n.strong,{children:"Explanation:"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The subarray starting at index 0 is ",(0,s.jsx)(n.code,{children:"[1, 2]"}),", which is strictly increasing."]}),"\n",(0,s.jsxs)(n.li,{children:["The subarray starting at index 2 is ",(0,s.jsx)(n.code,{children:"[3, 4]"}),", which is also strictly increasing."]}),"\n",(0,s.jsx)(n.li,{children:"These two subarrays are adjacent, and 2 is the maximum possible value of k for which two such adjacent strictly increasing subarrays exist."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"2 <= nums.length <= 2 * 105"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"-109 <= nums[i] <= 109"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}const j={title:"3350. Adjacent Increasing Subarrays Detection II",description:"Given an array nums of n integers, your task is to find the maximum value of k for which there exist two adjacent subarrays of length k each, such that both subarrays are strictly increasing. Specifically, check if there are two subarrays of length k starting at indices a and b (a < b)",keywords:["LeetCode","3350. Adjacent Increasing Subarrays Detection II","Medium","Array","Binary Search"],tags:["LeetCode","Medium","Array","Binary Search"]},b="frontMatter.title",p={},f=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function g(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"frontmattertitle",children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/adjacent-increasing-subarrays-detection-ii",children:j.title})})}),"\n","\n",(0,s.jsx)(o.A,{difficulty:"Medium"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,s.jsxs)(r,{open:!0,children:[(0,s.jsx)("summary",{children:"Description"}),(0,s.jsx)(h,{}),(0,s.jsx)(m,{})]})}),(0,s.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,s.jsx)(c.A,{language:"js",children:u})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,s.jsxs)(n.p,{children:["\u8207 ",(0,s.jsx)(n.a,{href:"/problem-solving/LeetCode/Adjacent%20Increasing%20Subarrays%20Detection%20I/",children:"\u4e0a\u4e00\u984c"})," \u4e0d\u540c\u7684\u662f\u9019\u6b21\u984c\u76ee\u6c92\u6709\u7d66 ",(0,s.jsx)(n.code,{children:"k"}),"\uff0c\u800c\u662f\u8b8a\u6210\u984c\u76ee\u8981\u627e\u51fa\u6700\u5927\u7684 ",(0,s.jsx)(n.code,{children:"k"}),"\uff0c\u4e14\u5169\u500b\u76f8\u9130\u7684 subarray \u4e5f\u90fd\u8981\u662f strictly increasing\u3002"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\u9996\u5148\u7531\u65bc\u6e2c\u8a66\u7bc4\u570d\u662f ",(0,s.jsx)(n.code,{children:"2 <= nums.length <= 2 * 105"}),"\uff0c\u6545\u5728\u6700\u5c0f\u7684 nums.length = 2 \u6642\u76f4\u63a5 return 0\u3002",(0,s.jsx)(n.br,{}),"\n","\u4ee5\u53ca\u5ba3\u544a\u8b8a\u6578","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"count"})," \u4f86\u8a18\u9304\u7576\u524d\u7684 ",(0,s.jsx)(n.code,{children:"k"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"preCount"})," \u4f86\u7d00\u9304\u524d\u4e00\u6bb5\u7684 ",(0,s.jsx)(n.code,{children:"k"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"result"})," \u4f86\u7d00\u9304\u6700\u7d42\u7684\u7b54\u6848 (\u6700\u5927\u7684 ",(0,s.jsx)(n.code,{children:"k"})," )\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"if (nums.length <= 1) {\n  return 0;\n}\n\nlet count = 1;\nlet preCount = 0;\nlet result = 1;\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["\u63a5\u8457\u904d\u6b77\u9663\u5217\uff0c\u5982\u679c\u4e0b\u4e00\u500b\u6578\u5b57\u5927\u65bc\u73fe\u5728\u7684\u6578\u5b57\uff0c\u4ee3\u8868\u76ee\u524d strictly increasing\uff0c\u5c07 ",(0,s.jsx)(n.code,{children:"count"})," \u52a0\u4e00\uff0c\u5426\u5247\u5c31\u66f4\u65b0 ",(0,s.jsx)(n.code,{children:"result"}),"\u3002"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"for (let i = 1; i < nums.length; i++) {\n  if (nums[i] > nums[i - 1]) {\n    count++;\n  } else {\n    result = Math.max(result, Math.floor(count / 2));\n    result = Math.max(result, Math.min(count, preCount));\n    preCount = count; // \u5c07 preCount \u66f4\u65b0\u70ba\u7576\u524d\u7684 count\n    count = 1; // \u91cd\u7f6e count\n  }\n}\n"})}),"\n",(0,s.jsxs)(r,{open:!0,children:[(0,s.jsx)("summary",{children:"\u66f4\u65b0 result \u7684\u6b65\u9a5f"}),(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(l.A,{value:"Math.floor(count / 2)",label:"Math.floor(count / 2)",children:[(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Math.floor(count / 2)"})," \u662f\u7528\u4f86\u8655\u7406\u300c\u55ae\u4e00\u5340\u6bb5\u9023\u7e8c\u905e\u589e\u300d\u7684\u60c5\u6cc1\u3002"]}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5047\u8a2d ",(0,s.jsx)(n.code,{children:"nums = [1, 2, 3, 4, 5, 6]"}),"\uff0c\u9019\u88e1\u7684 count = 6\u3002\n\u4e14\u56e0\u70ba\u9019\u4e00\u6574\u6bb5\u662f\u905e\u589e\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u88ab\u5207\u6210\u5169\u500b\u9577\u5ea6\u70ba 3 \u7684\u5b50\u9663\u5217\uff1a"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"[1, 2, 3]"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"[4, 5, 6]"})}),"\n"]}),(0,s.jsx)(n.p,{children:"\u6240\u4ee5\u9019\u6bb5\u88e1\u9762\u6700\u5927\u7684 k \u53ef\u4ee5\u662f count / 2 = 3\u3002\uff08\u5982\u679c\u9577\u5ea6\u662f\u5947\u6578\uff0c\u6bd4\u5982 5\uff0c\u90a3\u6700\u5927\u53ef\u5207\u6210 Math.floor(5 / 2) = 2\u3002\uff09"})]}),(0,s.jsxs)(l.A,{value:"Math.min(count, preCount)",label:"Math.min(count, preCount)",children:[(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Math.min(count, preCount)"})," \u662f\u7528\u4f86\u8655\u7406\u300c\u6709\u65b7\u6389\u300d\u7684\u60c5\u6cc1\u3002"]}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u5047\u8a2d ",(0,s.jsx)(n.code,{children:"nums = [2, 3, 4, 5, 1, 2, 3]"})]}),(0,s.jsx)(n.p,{children:"\u9019\u6574\u6bb5\u4e0d\u662f strictly increasing\uff0c\u4e2d\u9593\u6709\u65b7\u6389\uff0c\u6545\u53ef\u4ee5\u62c6\u6210"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[2, 3, 4, 5]"})," // count = 4"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[1, 2, 3]"}),"    // count = 3\uff0cpreCount = 4"]}),"\n"]}),(0,s.jsxs)(n.p,{children:["\u800c\u5f62\u6210\u7684\u6700\u5927 ",(0,s.jsx)(n.code,{children:"k"})," \u662f\u5169\u6bb5\u4e2d\u300c\u8f03\u77ed\u300d\u7684\u90a3\u4e00\u6bb5\u9577\u5ea6\uff0c\u6545\u4e0a\u8ff0\u4f8b\u5b50\u7684\u6700\u5927 ",(0,s.jsx)(n.code,{children:"k"})," \u70ba 3\u3002"]})]})]})]}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["\u800c for \u8ff4\u5708\u7d50\u675f\u5f8c\u6700\u5f8c\u4e00\u6bb5\u905e\u589e\u5340\u9593\u9084\u6c92\u88ab\u7d50\u7b97","\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u5047\u8a2d ",(0,s.jsx)(n.code,{children:"nums = [1, 2, 3, 4, 5]"}),"\uff0c\u8ff4\u5708\u8dd1\u5b8c\u6642\uff0ccount = 5\uff0c\u4f46\u56e0\u70ba\u5f9e\u982d\u5230\u5c3e\u6c92\u9047\u5230\u905e\u589e\u4e2d\u65b7\uff0celse \u5f9e\u672a\u57f7\u884c"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u56e0\u6b64\u6700\u5f8c\u518d\u5224\u65b7\u4e00\u6b21\u5373\u53ef\u3002"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"result = Math.max(result, Math.floor(count / 2));\nresult = Math.max(result, Math.min(count, preCount));\n\nreturn result;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,s.jsxs)(n.p,{children:["\u8907\u96dc\u6b7b\u310c\uff1a\uff08",(0,s.jsx)(n.br,{}),"\n","\u4e00\u76f4\u9b3c\u6253\u7246\u760b\u72c2\u770b\u89e3\u6790\u624d\u641e\u61c2\u539f\u7406\u3002"]})]})}function y(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>i});r(6540);var t=r(4164);const s={tabItem:"tabItem_Ymn6"};var a=r(4848);function i({children:e,hidden:n,className:r}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,r),hidden:n,children:e})}},1470:(e,n,r)=>{r.d(n,{A:()=>I});var t=r(6540),s=r(4164),a=r(7559),i=r(3104),l=r(6347),c=r(205),o=r(7485),u=r(1682),d=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,u.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function m({value:e,tabValues:n}){return n.some((n=>n.value===e))}function j({queryString:e=!1,groupId:n}){const r=(0,l.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(s),(0,t.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function b(e){const{defaultValue:n,queryString:r=!1,groupId:s}=e,a=x(e),[i,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[o,u]=j({queryString:r,groupId:s}),[h,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,s]=(0,d.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:s}),p=(()=>{const e=o??h;return m({value:e,tabValues:a})?e:null})();(0,c.A)((()=>{p&&l(p)}),[p]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var p=r(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=r(4848);function y({className:e,block:n,selectedValue:r,selectValue:t,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),o=e=>{const n=e.currentTarget,s=l.indexOf(n),i=a[s].value;i!==r&&(c(n),t(i))},u=e=>{let n=null;switch(e.key){case"Enter":o(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map((({value:e,label:n,attributes:t})=>(0,g.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:u,onClick:o,...t,className:(0,s.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function v({lazy:e,children:n,selectedValue:r}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function k(e){const n=b(e);return(0,g.jsxs)("div",{className:(0,s.A)(a.G.tabs.container,"tabs-container",f.tabList),children:[(0,g.jsx)(y,{...n,...e}),(0,g.jsx)(v,{...n,...e})]})}function I(e){const n=(0,p.A)();return(0,g.jsx)(k,{...e,children:h(e.children)},String(n))}},2693:(e,n,r)=>{r.d(n,{A:()=>a});r(6540);var t=r(7293),s=r(4848);const a=({difficulty:e,kyu:n})=>{let r=e;n&&(n>=5&&n<=8?r="Easy":n>=3&&n<=4?r="Medium":n>=1&&n<=2&&(r="Hard"));const a=r?{Easy:"tip",Medium:"warning",Hard:"danger"}[r]:"tip",i=r?n?`${n} kyu`:r:"";return(0,s.jsx)(t.A,{type:a,icon:null,title:i,children:(0,s.jsx)(s.Fragment,{})})}}}]);