"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9717],{7504:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>f,contentTitle:()=>b,default:()=>v,frontMatter:()=>g,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"LeetCode/Minimum Size Subarray Sum/README","title":"209. Minimum Size Subarray Sum","description":"Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.","source":"@site/docs/LeetCode/209. Minimum Size Subarray Sum/README.mdx","sourceDirName":"LeetCode/209. Minimum Size Subarray Sum","slug":"/LeetCode/Minimum Size Subarray Sum/","permalink":"/problem-solving/LeetCode/Minimum Size Subarray Sum/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Medium","permalink":"/problem-solving/tags/medium"},{"inline":true,"label":"Array","permalink":"/problem-solving/tags/array"},{"inline":true,"label":"Binary Search","permalink":"/problem-solving/tags/binary-search"},{"inline":true,"label":"Sliding Window","permalink":"/problem-solving/tags/sliding-window"},{"inline":true,"label":"Prefix Sum","permalink":"/problem-solving/tags/prefix-sum"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1761237301000,"frontMatter":{"title":"209. Minimum Size Subarray Sum","description":"Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.","keywords":["LeetCode","209. Minimum Size Subarray Sum","Medium","Array","Binary Search","Sliding Window","Prefix Sum"],"tags":["LeetCode","Medium","Array","Binary Search","Sliding Window","Prefix Sum"]},"sidebar":"tutorialSidebar","previous":{"title":"11. Container With Most Water","permalink":"/problem-solving/LeetCode/Container With Most Water/"},"next":{"title":"349. Intersection of Two Arrays","permalink":"/problem-solving/LeetCode/Intersection of Two Arrays/"}}');var a=r(4848),i=r(8453),s=r(1470),l=r(9365),o=r(3457),u=r(2693);const c="/**\n * @param {number} target\n * @param {number[]} nums\n * @return {number}\n */\nvar minSubArrayLen = function (target, nums) {\n  let minLength = nums.length + 1;\n  let left = 0;\n  let right = 0;\n  let currentSum = 0;\n\n  while (right < nums.length) {\n    currentSum += nums[right];\n\n    while (currentSum >= target) {\n      if (minLength > right - left + 1) {\n        minLength = right - left + 1;\n      }\n      currentSum -= nums[left];\n      left++;\n    }\n\n    right++;\n  }\n  if (minLength === nums.length + 1) {\n    return 0;\n  } else {\n    return minLength;\n  }\n};\n";function d(e){const n={code:"code",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["You are given an integer array height of length ",(0,a.jsx)(n.code,{children:"n"}),". There are n vertical lines drawn such that the two endpoints of the ",(0,a.jsx)(n.code,{children:"ith"})," line are ",(0,a.jsx)(n.code,{children:"1(i, 0)"})," and ",(0,a.jsx)(n.code,{children:"(i, height[i])"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Find two lines that together with the x-axis form a container, such that the container contains the most water."}),"\n",(0,a.jsx)(n.p,{children:"Return the maximum amount of water a container can store."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Notice"})," that you may not slant the container."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function m(e){const n={blockquote:"blockquote",br:"br",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"})," target = 7, nums = [2,3,1,2,4,3]",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," 2",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Explanation:"})," The subarray [4,3] has the minimal length under the problem constraint."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"})," target = 4, nums = [1,4,4]",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," 1"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-3",children:"Example 3:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"})," target = 11, nums = [1,1,1,1,1,1,1,1]",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," 0"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"constraints",children:"Constraints:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1 <= target <= 109\n1 <= nums.length <= 105\n1 <= nums[i] <= 104\n"})}),"\n",(0,a.jsx)(n.p,{children:"Follow up: If you have figured out the O(n) solution, try coding another solution of which the time complexity is O(n log(n))."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}const g={title:"209. Minimum Size Subarray Sum",description:"Given an array of positive integers nums and a positive integer target, return the minimal length of a subarray whose sum is greater than or equal to target. If there is no such subarray, return 0 instead.",keywords:["LeetCode","209. Minimum Size Subarray Sum","Medium","Array","Binary Search","Sliding Window","Prefix Sum"],tags:["LeetCode","Medium","Array","Binary Search","Sliding Window","Prefix Sum"]},b="frontMatter.title",f={},x=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Example 3:",id:"example-3",level:4},{value:"Constraints:",id:"constraints",level:3},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function j(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"frontmattertitle",children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-size-subarray-sum/",children:g.title})})}),"\n","\n",(0,a.jsx)(u.A,{difficulty:"Medium"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,a.jsxs)(r,{open:!0,children:[(0,a.jsx)("summary",{children:"Description"}),(0,a.jsx)(h,{}),(0,a.jsx)(p,{})]})}),(0,a.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,a.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,a.jsx)(o.A,{language:"js",children:c})]})]}),"\n",(0,a.jsx)(n.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,a.jsxs)(n.p,{children:["\u7df4\u7fd2 ",(0,a.jsx)(n.code,{children:"Sliding Window"}),(0,a.jsx)(n.br,{}),"\n","\u9996\u5148\u7531 ",(0,a.jsx)(n.code,{children:"right"})," \u958b\u59cb\u6162\u6162\u5f80\u53f3\u79fb\u52d5\uff0c\u4e26\u52a0\u7e3d ",(0,a.jsx)(n.code,{children:"left"})," \u548c ",(0,a.jsx)(n.code,{children:"right"})," \u7bc4\u570d\u7684\u9019\u500b window \u4e2d\u7684\u7e3d\u548c\uff0c\u76f4\u5230\u5927\u65bc ",(0,a.jsx)(n.code,{children:"target"}),"\u3002",(0,a.jsx)(n.br,{}),"\n","\u7576\u5927\u65bc ",(0,a.jsx)(n.code,{children:"target"})," \u6642\u5019 ",(0,a.jsx)(n.code,{children:"left"})," \u5c31\u5f80\u53f3\u79fb\u52d5\u4f86\u6e1b\u5c11 ",(0,a.jsx)(n.code,{children:"minLength"})," \u7684\u53ef\u80fd\u503c\uff0c\u91cd\u8907\u79fb\u52d5 ",(0,a.jsx)(n.code,{children:"left"})," \u548c ",(0,a.jsx)(n.code,{children:"right"})," \u76f4\u5230\u627e\u51fa\u6b63\u78ba\u7b54\u6848\u3002"]}),"\n",(0,a.jsx)(n.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,a.jsxs)(n.p,{children:["\u4e5f\u662f\u770b\u4e86 ",(0,a.jsx)(n.a,{href:"https://www.udemy.com/course/algorithm-data-structure",children:"Wilson Ren \u7684 \u8cc7\u6599\u7d50\u69cb\u8207\u6f14\u7b97\u6cd5 (JavaScript)"})," \u4ecb\u7d39\u9019\u984c\u7d93\u5178\u984c\uff0c\u8981\u628a\u9019\u4e9b\u984c\u578b\u5f04\u719f\u6253\u597d\u6f14\u7b97\u6cd5\u57fa\u790e!"]})]})}function v(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var t=r(4164);const a={tabItem:"tabItem_Ymn6"};var i=r(4848);function s({children:e,hidden:n,className:r}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,r),hidden:n,children:e})}},1470:(e,n,r)=>{r.d(n,{A:()=>w});var t=r(6540),a=r(4164),i=r(7559),s=r(3104),l=r(6347),o=r(205),u=r(7485),c=r(1682),d=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function g({queryString:e=!1,groupId:n}){const r=(0,l.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function b(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,i=m(e),[s,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[u,c]=g({queryString:r,groupId:a}),[h,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,a]=(0,d.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),f=(()=>{const e=u??h;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),b(e)}),[c,b,i]),tabValues:i}}var f=r(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(4848);function v({className:e,block:n,selectedValue:r,selectValue:t,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,s.a_)(),u=e=>{const n=e.currentTarget,a=l.indexOf(n),s=i[a].value;s!==r&&(o(n),t(s))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:i.map((({value:e,label:n,attributes:t})=>(0,j.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:u,...t,className:(0,a.A)("tabs__item",x.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function y({lazy:e,children:n,selectedValue:r}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function S(e){const n=b(e);return(0,j.jsxs)("div",{className:(0,a.A)(i.G.tabs.container,"tabs-container",x.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(y,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,j.jsx)(S,{...e,children:h(e.children)},String(n))}},2693:(e,n,r)=>{r.d(n,{A:()=>i});r(6540);var t=r(7293),a=r(4848);const i=({difficulty:e,kyu:n})=>{let r=e;n&&(n>=5&&n<=8?r="Easy":n>=3&&n<=4?r="Medium":n>=1&&n<=2&&(r="Hard"));const i=r?{Easy:"tip",Medium:"warning",Hard:"danger"}[r]:"tip",s=r?n?`${n} kyu`:r:"";return(0,a.jsx)(t.A,{type:i,icon:null,title:s,children:(0,a.jsx)(a.Fragment,{})})}}}]);