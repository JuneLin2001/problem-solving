"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5378],{4359:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>x,contentTitle:()=>f,default:()=>w,frontMatter:()=>m,metadata:()=>n,toc:()=>j});const n=JSON.parse('{"id":"LeetCode/Check If Digits Are Equal in String After Operations I/README","title":"3461. Check If Digits Are Equal in String After Operations I","description":"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.","source":"@site/docs/LeetCode/3461. Check If Digits Are Equal in String After Operations I/README.mdx","sourceDirName":"LeetCode/3461. Check If Digits Are Equal in String After Operations I","slug":"/LeetCode/Check If Digits Are Equal in String After Operations I/","permalink":"/problem-solving/LeetCode/Check If Digits Are Equal in String After Operations I/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Easy","permalink":"/problem-solving/tags/easy"},{"inline":true,"label":"Math String","permalink":"/problem-solving/tags/math-string"},{"inline":true,"label":"Simulation","permalink":"/problem-solving/tags/simulation"},{"inline":true,"label":"Combinatorics","permalink":"/problem-solving/tags/combinatorics"},{"inline":true,"label":"Number Theory","permalink":"/problem-solving/tags/number-theory"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1761230984000,"frontMatter":{"title":"3461. Check If Digits Are Equal in String After Operations I","description":"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.","keywords":["LeetCode","3461. Check If Digits Are Equal in String After Operations I","Easy","Math String","Simulation","Combinatorics","Number Theory"],"tags":["LeetCode","Easy","Math String","Simulation","Combinatorics","Number Theory"]},"sidebar":"tutorialSidebar","previous":{"title":"3397. Maximum Number of Distinct Elements After Operations","permalink":"/problem-solving/LeetCode/Maximum Number of Distinct Elements After Operations/"},"next":{"title":"Binary Search","permalink":"/problem-solving/\u8cc7\u6599\u7d50\u69cb\u8207\u6f14\u7b97\u6cd5/Binary Search/"}}');var s=t(4848),r=t(8453),l=t(1470),o=t(9365),a=t(3457),c=t(2693);const h='/**\n * @param {string} s\n * @return {boolean}\n */\nvar hasSameDigits = function (s) {\n  while (s.length >= 3) {\n    temp = "";\n\n    for (let i = 0; i < s.length - 1; i++) {\n      temp += ((parseInt(s[i]) + parseInt(s[i + 1])) % 10).toString();\n    }\n\n    s = temp;\n  }\n\n  return s[0] === s[1];\n};\n';function d(e){const i={li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10."}),"\n",(0,s.jsx)(i.li,{children:"Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Return true if the final two digits in s are the same; otherwise, return false."})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function g(e){const i={blockquote:"blockquote",br:"br",code:"code",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Input:"}),' s = "3902"',(0,s.jsx)(i.br,{}),"\n",(0,s.jsx)(i.strong,{children:"Output:"})," true",(0,s.jsx)(i.br,{}),"\n",(0,s.jsx)(i.strong,{children:"Explanation:"})]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'Initially, s = "3902"'}),"\n",(0,s.jsxs)(i.li,{children:["First operation:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"(s[0] + s[1]) % 10 = (3 + 9) % 10 = 2"}),"\n",(0,s.jsx)(i.li,{children:"(s[1] + s[2]) % 10 = (9 + 0) % 10 = 9"}),"\n",(0,s.jsx)(i.li,{children:"(s[2] + s[3]) % 10 = (0 + 2) % 10 = 2"}),"\n",(0,s.jsx)(i.li,{children:'s becomes "292"'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["Second operation:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"(s[0] + s[1]) % 10 = (2 + 9) % 10 = 1"}),"\n",(0,s.jsx)(i.li,{children:"(s[1] + s[2]) % 10 = (9 + 2) % 10 = 1"}),"\n",(0,s.jsx)(i.li,{children:'s becomes "11"'}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:'Since the digits in "11" are the same, the output is true.'}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,s.jsxs)(i.blockquote,{children:["\n",(0,s.jsxs)(i.p,{children:[(0,s.jsx)(i.strong,{children:"Input:"}),' s = "34789"\n',(0,s.jsx)(i.strong,{children:"Output:"})," false\n",(0,s.jsx)(i.strong,{children:"Explanation:"})]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:'Initially, s = "34789".'}),"\n",(0,s.jsx)(i.li,{children:'After the first operation, s = "7157".'}),"\n",(0,s.jsx)(i.li,{children:'After the second operation, s = "862".'}),"\n",(0,s.jsx)(i.li,{children:'After the third operation, s = "48".'}),"\n",(0,s.jsx)(i.li,{children:"Since '4' != '8', the output is false."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.code,{children:"3 <= s.length <= 100"})}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"s"})," consists of only digits."]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}const m={title:"3461. Check If Digits Are Equal in String After Operations I",description:"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.",keywords:["LeetCode","3461. Check If Digits Are Equal in String After Operations I","Easy","Math String","Simulation","Combinatorics","Number Theory"],tags:["LeetCode","Easy","Math String","Simulation","Combinatorics","Number Theory"]},f="frontMatter.title",x={},j=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function b(e){const i={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components},{Details:t}=i;return t||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"frontmattertitle",children:(0,s.jsx)(i.a,{href:"https://leetcode.com/problems/check-if-digits-are-equal-in-string-after-operations-i",children:m.title})})}),"\n","\n",(0,s.jsx)(c.A,{difficulty:"Easy"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(o.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,s.jsxs)(t,{open:!0,children:[(0,s.jsx)("summary",{children:"Description"}),(0,s.jsx)(u,{}),(0,s.jsx)(p,{})]})}),(0,s.jsxs)(o.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,s.jsx)(i.h2,{id:"solution",children:"Solution"}),(0,s.jsx)(a.A,{language:"js",children:h})]})]}),"\n",(0,s.jsx)(i.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,s.jsxs)(i.p,{children:["\u984c\u76ee\u7684 ",(0,s.jsx)(i.code,{children:"Hint 1"})," \u5beb\uff1aSimulate the operations as described.",(0,s.jsx)(i.br,{}),"\n","\u6240\u4ee5\u5c31\u66b4\u529b\u89e3\uff0c\u76f4\u63a5\u628a\u984c\u76ee\u63cf\u8ff0\u8f49\u6210\u7a0b\u5f0f\u78bc\u3002"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'var hasSameDigits = function (s) {\n  while (s.length >= 3) {\n    // \u7576\u5b57\u4e32\u9577\u5ea6\u4ecd\u5927\u65bc3\u6642\u5019\u5c31\u91cd\u8907\u57f7\u884c\n    temp = ""; //\u5b9a\u7fa9\u4e00\u500b\u7a7a\u5b57\u4e32\u7576\u66ab\u6642\u7684\u5bb9\u5668\n\n    for (let i = 0; i < s.length - 1; i++) {\n      //\u56e0\u70ba\u662f i \u548c i + 1\uff0c\u6240\u4ee5\u8981 length - 1 \u624d\u80fd\u6b63\u78ba\u6bd4\u5c0d\n      temp += ((parseInt(s[i]) + parseInt(s[i + 1])) % 10).toString(); //\u628a\u76ee\u524d\u904b\u7b97\u7684\u7d50\u679c\u5132\u5b58\u9032\u5bb9\u5668\n    }\n\n    s = temp; //\u66f4\u65b0s\u7684\u503c\uff0c\u6bcf\u6b21\u5b8c\u6210\u4e00\u8f2a while \u8ff4\u5708\u9577\u5ea6\u6703\u5c11 1\n  }\n\n  return s[0] === s[1];\n  // \u76f4\u5230\u5269\u5169\u500b\u503c\u5c31\u812b\u96e2 while \u8ff4\u5708\u4e26 return \u7d50\u679c\n  // \u82e5\u5169\u8005\u76f8\u540c\u5247 True\uff0c\u53cd\u4e4b False\n};\n'})}),"\n",(0,s.jsx)(i.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,s.jsx)(i.p,{children:"\u770b Discussion \u6709\u4eba\u8cbc\u4e86\u9019\u5169\u5f35\u5716\uff1a"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"https://assets.leetcode.com/users/images/910b1c5d-a6a8-4d97-9fd5-775f856c209e_1761200322.2593112.png",alt:""})}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{src:"https://assets.leetcode.com/users/images/f3938dd6-8fad-452b-ae4b-b4846d68f964_1761186613.4321.png",alt:""})}),"\n",(0,s.jsxs)(i.p,{children:["\u4f3c\u4e4e\u53ef\u4ee5\u7528",(0,s.jsx)(i.a,{href:"https://zh.wikipedia.org/zh-tw/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2",children:"\u5df4\u65af\u5361\u4e09\u89d2\u5f62"}),"\u4f86\u89e3\u9019\u984c\uff0c\u4f46\u9084\u6c92\u6ef2\u900f\u9019\u500b\u9032\u968e\u89e3\u6cd5\uff0c\u4e5f\u8a31\u4e4b\u5f8c\u518d\u56de\u4f86\u8a66\u8a66\u770b\uff01"]})]})}function w(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}}}]);