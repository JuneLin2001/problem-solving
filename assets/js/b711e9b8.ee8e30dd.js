"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6148],{758:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>b,contentTitle:()=>m,default:()=>E,frontMatter:()=>g,metadata:()=>t,toc:()=>v});const t=JSON.parse('{"id":"LeetCode/Successful Pairs of Spells and Potions/README","title":"2300. Successful Pairs of Spells and Potions","description":"You are given two positive integer arrays spells and potions, of length n and m respectively, where spells[i] represents the strength of the ith spell and potions[j] represents the strength of the jth potion.","source":"@site/docs/LeetCode/2300. Successful Pairs of Spells and Potions/README.mdx","sourceDirName":"LeetCode/2300. Successful Pairs of Spells and Potions","slug":"/LeetCode/Successful Pairs of Spells and Potions/","permalink":"/problem-solving/LeetCode/Successful Pairs of Spells and Potions/","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Yen-Chun Lin","lastUpdatedAt":1759910270000,"frontMatter":{"title":"2300. Successful Pairs of Spells and Potions","description":"You are given two positive integer arrays spells and potions, of length n and m respectively, where spells[i] represents the strength of the ith spell and potions[j] represents the strength of the jth potion.","keywords":["LeetCode","2300. Successful Pairs of Spells and Potions","Medium","Array","Two Pointers","Binary Search","Sorting"]},"sidebar":"tutorialSidebar","previous":{"title":"2235. Add Two Integers","permalink":"/problem-solving/LeetCode/Add Two Integers/"},"next":{"title":"2364. Count Number of Bad Pairs","permalink":"/problem-solving/LeetCode/Count Number of Bad Pairs/"}}');var r=n(4848),i=n(8453),l=n(1470),o=n(9365),c=n(3457),d=n(2693);const a="/**\n * @param {number[]} spells\n * @param {number[]} potions\n * @param {number} success\n * @return {number[]}\n */\nvar successfulPairs = function (spells, potions, success) {\n  const result = [];\n  const sortPotions = potions.sort((a, b) => a - b);\n\n  for (let i = 0; i < spells.length; i++) {\n    let left = 0;\n    let right = sortPotions.length - 1;\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (spells[i] * sortPotions[mid] < success) {\n        left = mid + 1;\n      } else {\n        right = mid - 1;\n      }\n    }\n\n    result.push(sortPotions.length - left);\n  }\n\n  return result;\n};\n";function h(e){const s={code:"code",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["You are given two positive integer arrays ",(0,r.jsx)(s.code,{children:"spells"})," and ",(0,r.jsx)(s.code,{children:"potions"}),", of length ",(0,r.jsx)(s.code,{children:"n"})," and ",(0,r.jsx)(s.code,{children:"m"})," respectively, where ",(0,r.jsx)(s.code,{children:"spells[i]"})," represents the strength of the ",(0,r.jsx)(s.code,{children:"ith"})," spell and ",(0,r.jsx)(s.code,{children:"potions[j]"})," represents the strength of the ",(0,r.jsx)(s.code,{children:"jth"})," potion."]}),"\n",(0,r.jsxs)(s.p,{children:["You are also given an integer ",(0,r.jsx)(s.code,{children:"success"}),". A spell and potion pair is considered successful if the product of their strengths is ",(0,r.jsx)(s.strong,{children:"at least"})," ",(0,r.jsx)(s.code,{children:"success"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Return an integer array ",(0,r.jsx)(s.code,{children:"pairs"})," of length n where ",(0,r.jsx)(s.code,{children:"pairs[i]"})," is the number of potions that will form a successful pair with the ",(0,r.jsx)(s.code,{children:"ith"})," spell."]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function u(e){const s={blockquote:"blockquote",br:"br",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," spells = [5,1,3], potions = [1,2,3,4,5], success = 7",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.strong,{children:"Output:"})," [4,0,3]",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.strong,{children:"Explanation:"})]}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"0th spell: 5 * [1,2,3,4,5] = [5,10,15,20,25]. 4 pairs are successful."}),"\n",(0,r.jsx)(s.li,{children:"1st spell: 1 * [1,2,3,4,5] = [1,2,3,4,5]. 0 pairs are successful."}),"\n",(0,r.jsxs)(s.li,{children:["2nd spell: 3 * [1,2,3,4,5] = [3,6,9,12,15]. 3 pairs are successful.",(0,r.jsx)(s.br,{}),"\n","Thus, [4,0,3] is returned."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Input:"})," spells = [3,1,2], potions = [8,5,8], success = 16",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.strong,{children:"Output:"})," [2,0,2]",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.strong,{children:"Explanation:"})]}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"0th spell: 3 * [8,5,8] = [24,15,24]. 2 pairs are successful."}),"\n",(0,r.jsx)(s.li,{children:"1st spell: 1 * [8,5,8] = [8,5,8]. 0 pairs are successful."}),"\n",(0,r.jsxs)(s.li,{children:["2nd spell: 2 * [8,5,8] = [16,10,16]. 2 pairs are successful.",(0,r.jsx)(s.br,{}),"\n","Thus, [2,0,2] is returned."]}),"\n"]})]})}function x(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}function j(e){const s={code:"code",h4:"h4",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"n == spells.length"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"m == potions.length"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"1 <= n, m <= 105"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"1 <= spells[i], potions[i] <= 105"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"1 <= success <= 1010"})}),"\n"]})]})}function f(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}const g={title:"2300. Successful Pairs of Spells and Potions",description:"You are given two positive integer arrays spells and potions, of length n and m respectively, where spells[i] represents the strength of the ith spell and potions[j] represents the strength of the jth potion.",keywords:["LeetCode","2300. Successful Pairs of Spells and Potions","Medium","Array","Two Pointers","Binary Search","Sorting"]},m="frontMatter.title",b={},v=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function y(e){const s={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"frontmattertitle",children:(0,r.jsx)(s.a,{href:"https://leetcode.com/problems/successful-pairs-of-spells-and-potions",children:g.title})})}),"\n","\n",(0,r.jsx)(d.A,{difficulty:"Medium"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(o.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:"Description"}),(0,r.jsx)(p,{}),(0,r.jsx)(x,{}),(0,r.jsx)(f,{})]})}),(0,r.jsxs)(o.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,r.jsx)(s.h2,{id:"solution",children:"Solution"}),(0,r.jsx)(c.A,{language:"js",children:a})]})]}),"\n",(0,r.jsx)(s.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,r.jsxs)(s.p,{children:["\u9700\u8981\u6839\u64da ",(0,r.jsx)(s.code,{children:"spells"})," \u9663\u5217\u4e2d\u7684\u6bcf\u500b\u5143\u7d20\u4f86\u627e\u5230\u7b26\u5408\u689d\u4ef6\u7684 ",(0,r.jsx)(s.code,{children:"potions"})," \u9663\u5217\u4e2d\u7684\u5143\u7d20\uff0c\u518d\u8a08\u7b97\u51fa\u7b26\u5408\u689d\u4ef6\u7684\u5143\u7d20\u7684\u6578\u91cf\uff0c\u4e26\u5c07\u6578\u91cf push \u5230 ",(0,r.jsx)(s.code,{children:"result"})," \u9663\u5217\u4e2d\u3002"]}),"\n",(0,r.jsxs)(s.p,{children:["\u4f7f\u7528 ",(0,r.jsx)(s.a,{href:"../../%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%E8%88%87%E6%BC%94%E7%AE%97%E6%B3%95/Binary%20Search",children:"binary search"})," \u4f86\u89e3\u984c\uff0c\u56e0\u70ba ",(0,r.jsx)(s.code,{children:"potions"})," \u9663\u5217\u4e0d\u4e00\u5b9a\u662f\u7167\u9806\u5e8f\uff0c\u6240\u4ee5\u8981\u5148\u5c0d potions \u9663\u5217\u9032\u884c\u6392\u5e8f"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"const sortPotions = potions.sort((a, b) => a - b);\n// sort((a, b) => a - b) \u4ee3\u8868\u7531\u5c0f\u5230\u5927\u6392\u5e8f\uff0c[3,1,2,4] => [1,2,3,4]\n"})}),"\n",(0,r.jsxs)(s.p,{children:["\u518d\u4f86\u904d\u6b77 ",(0,r.jsx)(s.code,{children:"spells"})," \u9663\u5217\uff0c\u900f\u904e ",(0,r.jsx)(s.a,{href:"../../%E8%B3%87%E6%96%99%E7%B5%90%E6%A7%8B%E8%88%87%E6%BC%94%E7%AE%97%E6%B3%95/Binary%20Search",children:"binary search"})," \u4f86\u627e\u5230\u7b26\u5408\u689d\u4ef6\u7684 potion \u7684\u8d77\u9ede\u3002",(0,r.jsx)(s.br,{}),"\n","\u6839\u64da\u8d77\u9ede\u4f86\u8a08\u7b97\u51fa\u7b26\u5408\u689d\u4ef6\u7684 potion \u7684\u6578\u91cf\uff0c\u4e26\u5c07\u6578\u91cf push \u5230 ",(0,r.jsx)(s.code,{children:"result"})," \u9663\u5217\u4e2d\u3002"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"\n  for (let i = 0; i < spells.length; i++) {\n    let left = 0;\n    let right = sortPotions.length - 1;\n\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      if (spells[i] * sortPotions[mid] < success) {\n        left = mid + 1; \n        /* \u5982\u679c\u5c0f\u65bc success \u4ee3\u8868\u7b26\u5408\u689d\u4ef6\u7684 potion \u7684\u8d77\u9ede\u5728\u53f3\u908a\uff0c\n         \u6545\u8981\u628a\u76ee\u524d\u7684 mid \u7576\u6210\u65b0\u7684 left\uff0c\u7e7c\u7e8c\u5f80\u53f3\u908a\u627e */\n      } else {\n        right = mid - 1; \n        /* \u53cd\u4e4b\u5247\u628a\u76ee\u524d\u7684 mid - 1 \u7576\u6210\u65b0\u7684 right\uff0c\u7e7c\u7e8c\u5f80\u5de6\u908a\u627e\u3002\n           \u5982\u679c\u4e0d\u6e1b\u4e00\u5247\u6709\u53ef\u80fd\u8b93 mid \u9084\u662f\u540c\u4e00\u500b\u503c\uff0c\u5c0e\u81f4\u7121\u9650\u8ff4\u5708 */\n      }\n    }\n\n    result.push(sortPotions.length - left);\n  }\n"})}),"\n",(0,r.jsx)(s.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,r.jsx)(s.p,{children:"\u4e0d\u592a\u76f4\u89c0\uff0c\u82e5\u4e0d\u4f7f\u7528 binary search \u7684\u8a71\u6703\u5c0e\u81f4 Time Limit Exceeded\uff0c\u6545\u9700\u8981\u4f7f\u7528\u6642\u9593\u8907\u96dc\u5ea6\u70ba O(log n) \u7684 binary search\u3002"})]})}function E(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(y,{...e})}):y(e)}},2693:(e,s,n)=>{n.d(s,{A:()=>i});n(6540);var t=n(7293),r=n(4848);const i=({difficulty:e,kyu:s})=>{let n=e;s&&(s>=5&&s<=8?n="Easy":s>=3&&s<=4?n="Medium":s>=1&&s<=2&&(n="Hard"));const i=n?{Easy:"tip",Medium:"warning",Hard:"danger"}[n]:"tip",l=n?s?`${s} kyu`:n:"";return(0,r.jsx)(t.A,{type:i,icon:null,title:l,children:(0,r.jsx)(r.Fragment,{})})}}}]);