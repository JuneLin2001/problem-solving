"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5378],{4359:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>b,contentTitle:()=>f,default:()=>v,frontMatter:()=>m,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"LeetCode/Check If Digits Are Equal in String After Operations I/README","title":"3461. Check If Digits Are Equal in String After Operations I","description":"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.","source":"@site/docs/LeetCode/3461. Check If Digits Are Equal in String After Operations I/README.mdx","sourceDirName":"LeetCode/3461. Check If Digits Are Equal in String After Operations I","slug":"/LeetCode/Check If Digits Are Equal in String After Operations I/","permalink":"/problem-solving/LeetCode/Check If Digits Are Equal in String After Operations I/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Easy","permalink":"/problem-solving/tags/easy"},{"inline":true,"label":"Math String","permalink":"/problem-solving/tags/math-string"},{"inline":true,"label":"Simulation","permalink":"/problem-solving/tags/simulation"},{"inline":true,"label":"Combinatorics","permalink":"/problem-solving/tags/combinatorics"},{"inline":true,"label":"Number Theory","permalink":"/problem-solving/tags/number-theory"}],"version":"current","lastUpdatedBy":"Yen-Chun,Lin","lastUpdatedAt":1761230984000,"frontMatter":{"title":"3461. Check If Digits Are Equal in String After Operations I","description":"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.","keywords":["LeetCode","3461. Check If Digits Are Equal in String After Operations I","Easy","Math String","Simulation","Combinatorics","Number Theory"],"tags":["LeetCode","Easy","Math String","Simulation","Combinatorics","Number Theory"]},"sidebar":"tutorialSidebar","previous":{"title":"3397. Maximum Number of Distinct Elements After Operations","permalink":"/problem-solving/LeetCode/Maximum Number of Distinct Elements After Operations/"},"next":{"title":"Binary Search","permalink":"/problem-solving/\u8cc7\u6599\u7d50\u69cb\u8207\u6f14\u7b97\u6cd5/Binary Search/"}}');var r=n(4848),s=n(8453),a=n(1470),l=n(9365),o=n(3457),c=n(2693);const u='/**\n * @param {string} s\n * @return {boolean}\n */\nvar hasSameDigits = function (s) {\n  while (s.length >= 3) {\n    temp = "";\n\n    for (let i = 0; i < s.length - 1; i++) {\n      temp += ((parseInt(s[i]) + parseInt(s[i + 1])) % 10).toString();\n    }\n\n    s = temp;\n  }\n\n  return s[0] === s[1];\n};\n';function d(e){const t={li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10."}),"\n",(0,r.jsx)(t.li,{children:"Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Return true if the final two digits in s are the same; otherwise, return false."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function p(e){const t={blockquote:"blockquote",br:"br",code:"code",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Input:"}),' s = "3902"',(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Output:"})," true",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Explanation:"})]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'Initially, s = "3902"'}),"\n",(0,r.jsxs)(t.li,{children:["First operation:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"(s[0] + s[1]) % 10 = (3 + 9) % 10 = 2"}),"\n",(0,r.jsx)(t.li,{children:"(s[1] + s[2]) % 10 = (9 + 0) % 10 = 9"}),"\n",(0,r.jsx)(t.li,{children:"(s[2] + s[3]) % 10 = (0 + 2) % 10 = 2"}),"\n",(0,r.jsx)(t.li,{children:'s becomes "292"'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["Second operation:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"(s[0] + s[1]) % 10 = (2 + 9) % 10 = 1"}),"\n",(0,r.jsx)(t.li,{children:"(s[1] + s[2]) % 10 = (9 + 2) % 10 = 1"}),"\n",(0,r.jsx)(t.li,{children:'s becomes "11"'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:'Since the digits in "11" are the same, the output is true.'}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Input:"}),' s = "34789"\n',(0,r.jsx)(t.strong,{children:"Output:"})," false\n",(0,r.jsx)(t.strong,{children:"Explanation:"})]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'Initially, s = "34789".'}),"\n",(0,r.jsx)(t.li,{children:'After the first operation, s = "7157".'}),"\n",(0,r.jsx)(t.li,{children:'After the second operation, s = "862".'}),"\n",(0,r.jsx)(t.li,{children:'After the third operation, s = "48".'}),"\n",(0,r.jsx)(t.li,{children:"Since '4' != '8', the output is false."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.code,{children:"3 <= s.length <= 100"})}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"s"})," consists of only digits."]}),"\n"]})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}const m={title:"3461. Check If Digits Are Equal in String After Operations I",description:"You are given a string s consisting of digits. Perform the following operation repeatedly until the string has exactly two digits:For each pair of consecutive digits in s, starting from the first digit, calculate a new digit as the sum of the two digits modulo 10. Replace s with the sequence of newly calculated digits, maintaining the order in which they are computed. Return true if the final two digits in s are the same; otherwise, return false.",keywords:["LeetCode","3461. Check If Digits Are Equal in String After Operations I","Easy","Math String","Simulation","Combinatorics","Number Theory"],tags:["LeetCode","Easy","Math String","Simulation","Combinatorics","Number Theory"]},f="frontMatter.title",b={},x=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function j(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"frontmattertitle",children:(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/check-if-digits-are-equal-in-string-after-operations-i",children:m.title})})}),"\n","\n",(0,r.jsx)(c.A,{difficulty:"Easy"}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,r.jsxs)(n,{open:!0,children:[(0,r.jsx)("summary",{children:"Description"}),(0,r.jsx)(h,{}),(0,r.jsx)(g,{})]})}),(0,r.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,r.jsx)(t.h2,{id:"solution",children:"Solution"}),(0,r.jsx)(o.A,{language:"js",children:u})]})]}),"\n",(0,r.jsx)(t.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,r.jsxs)(t.p,{children:["\u984c\u76ee\u7684 ",(0,r.jsx)(t.code,{children:"Hint 1"})," \u5beb\uff1aSimulate the operations as described.",(0,r.jsx)(t.br,{}),"\n","\u6240\u4ee5\u5c31\u66b4\u529b\u89e3\uff0c\u76f4\u63a5\u628a\u984c\u76ee\u63cf\u8ff0\u8f49\u6210\u7a0b\u5f0f\u78bc\u3002"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'var hasSameDigits = function (s) {\n  while (s.length >= 3) {\n    // \u7576\u5b57\u4e32\u9577\u5ea6\u4ecd\u5927\u65bc3\u6642\u5019\u5c31\u91cd\u8907\u57f7\u884c\n    temp = ""; //\u5b9a\u7fa9\u4e00\u500b\u7a7a\u5b57\u4e32\u7576\u66ab\u6642\u7684\u5bb9\u5668\n\n    for (let i = 0; i < s.length - 1; i++) {\n      //\u56e0\u70ba\u662f i \u548c i + 1\uff0c\u6240\u4ee5\u8981 length - 1 \u624d\u80fd\u6b63\u78ba\u6bd4\u5c0d\n      temp += ((parseInt(s[i]) + parseInt(s[i + 1])) % 10).toString(); //\u628a\u76ee\u524d\u904b\u7b97\u7684\u7d50\u679c\u5132\u5b58\u9032\u5bb9\u5668\n    }\n\n    s = temp; //\u66f4\u65b0s\u7684\u503c\uff0c\u6bcf\u6b21\u5b8c\u6210\u4e00\u8f2a while \u8ff4\u5708\u9577\u5ea6\u6703\u5c11 1\n  }\n\n  return s[0] === s[1];\n  // \u76f4\u5230\u5269\u5169\u500b\u503c\u5c31\u812b\u96e2 while \u8ff4\u5708\u4e26 return \u7d50\u679c\n  // \u82e5\u5169\u8005\u76f8\u540c\u5247 True\uff0c\u53cd\u4e4b False\n};\n'})}),"\n",(0,r.jsx)(t.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,r.jsx)(t.p,{children:"\u770b Discussion \u6709\u4eba\u8cbc\u4e86\u9019\u5169\u5f35\u5716\uff1a"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://assets.leetcode.com/users/images/910b1c5d-a6a8-4d97-9fd5-775f856c209e_1761200322.2593112.png",alt:""})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://assets.leetcode.com/users/images/f3938dd6-8fad-452b-ae4b-b4846d68f964_1761186613.4321.png",alt:""})}),"\n",(0,r.jsxs)(t.p,{children:["\u4f3c\u4e4e\u53ef\u4ee5\u7528",(0,r.jsx)(t.a,{href:"https://zh.wikipedia.org/zh-tw/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E5%BD%A2",children:"\u5df4\u65af\u5361\u4e09\u89d2\u5f62"}),"\u4f86\u89e3\u9019\u984c\uff0c\u4f46\u9084\u6c92\u6ef2\u900f\u9019\u500b\u9032\u968e\u89e3\u6cd5\uff0c\u4e5f\u8a31\u4e4b\u5f8c\u518d\u56de\u4f86\u8a66\u8a66\u770b\uff01"]})]})}function v(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var i=n(4164);const r={tabItem:"tabItem_Ymn6"};var s=n(4848);function a({children:e,hidden:t,className:n}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,n),hidden:t,children:e})}},1470:(e,t,n)=>{n.d(t,{A:()=>A});var i=n(6540),r=n(4164),s=n(7559),a=n(3104),l=n(6347),o=n(205),c=n(7485),u=n(1682),d=n(679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return h(e).map((({props:{value:e,label:t,attributes:n,default:i}})=>({value:e,label:t,attributes:n,default:i})))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function g({value:e,tabValues:t}){return t.some((t=>t.value===e))}function m({queryString:e=!1,groupId:t}){const n=(0,l.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,c.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=p(e),[a,l]=(0,i.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[c,u]=m({queryString:n,groupId:r}),[h,f]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,d.Dv)(t);return[n,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),b=(()=>{const e=c??h;return g({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var b=n(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=n(4848);function v({className:e,block:t,selectedValue:n,selectValue:i,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,a.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),a=s[r].value;a!==n&&(o(t),i(a))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:s.map((({value:e,label:t,attributes:i})=>(0,j.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{l.push(e)},onKeyDown:u,onClick:c,...i,className:(0,r.A)("tabs__item",x.tabItem,i?.className,{"tabs__item--active":n===e}),children:t??e},e)))})}function w({lazy:e,children:t,selectedValue:n}){const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===n));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function y(e){const t=f(e);return(0,j.jsxs)("div",{className:(0,r.A)(s.G.tabs.container,"tabs-container",x.tabList),children:[(0,j.jsx)(v,{...t,...e}),(0,j.jsx)(w,{...t,...e})]})}function A(e){const t=(0,b.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(t))}},2693:(e,t,n)=>{n.d(t,{A:()=>s});n(6540);var i=n(7293),r=n(4848);const s=({difficulty:e,kyu:t})=>{let n=e;t&&(t>=5&&t<=8?n="Easy":t>=3&&t<=4?n="Medium":t>=1&&t<=2&&(n="Hard"));const s=n?{Easy:"tip",Medium:"warning",Hard:"danger"}[n]:"tip",a=n?t?`${t} kyu`:n:"";return(0,r.jsx)(i.A,{type:s,icon:null,title:a,children:(0,r.jsx)(r.Fragment,{})})}}}]);