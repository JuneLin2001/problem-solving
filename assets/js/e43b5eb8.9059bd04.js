"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7647],{5806:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>g,contentTitle:()=>f,default:()=>x,frontMatter:()=>m,metadata:()=>t,toc:()=>y});const t=JSON.parse('{"id":"LeetCode/Adjacent Increasing Subarrays Detection I/README","title":"3349. Adjacent Increasing Subarrays Detection I","description":"Given an array nums of n integers and an integer k, determine whether there exist two adjacent subarrays of length k such that both subarrays are strictly increasing. Specifically, check if there are two subarrays starting at indices a and b (a < b)","source":"@site/docs/LeetCode/3349. Adjacent Increasing Subarrays Detection I/README.mdx","sourceDirName":"LeetCode/3349. Adjacent Increasing Subarrays Detection I","slug":"/LeetCode/Adjacent Increasing Subarrays Detection I/","permalink":"/problem-solving/LeetCode/Adjacent Increasing Subarrays Detection I/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"LeetCode","permalink":"/problem-solving/tags/leet-code"},{"inline":true,"label":"Easy","permalink":"/problem-solving/tags/easy"},{"inline":true,"label":"Array","permalink":"/problem-solving/tags/array"}],"version":"current","lastUpdatedBy":"Yen-Chun Lin","lastUpdatedAt":1760430514000,"frontMatter":{"title":"3349. Adjacent Increasing Subarrays Detection I","description":"Given an array nums of n integers and an integer k, determine whether there exist two adjacent subarrays of length k such that both subarrays are strictly increasing. Specifically, check if there are two subarrays starting at indices a and b (a < b)","keywords":["LeetCode","3349. Adjacent Increasing Subarrays Detection I","Easy","Array"],"tags":["LeetCode","Easy","Array"]},"sidebar":"tutorialSidebar","previous":{"title":"3151. Special Array I","permalink":"/problem-solving/LeetCode/Special Array I/"},"next":{"title":"3350. Adjacent Increasing Subarrays Detection II","permalink":"/problem-solving/LeetCode/Adjacent Increasing Subarrays Detection II/"}}');var a=r(4848),s=r(8453),i=r(1470),l=r(9365),c=r(3457),u=r(2693);const o="/**\n * @param {number[]} nums\n * @param {number} k\n * @return {boolean}\n */\nvar hasIncreasingSubarrays = function (nums, k) {\n  const isIncreasing = (start) => {\n    for (let i = start; i < start + k - 1; i++) {\n      if (nums[i] >= nums[i + 1]) return false;\n    }\n    return true;\n  };\n\n  for (let i = 0; i + 2 * k <= nums.length; i++) {\n    if (isIncreasing(i) && isIncreasing(i + k)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n";function d(e){const n={li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Given an array nums of n integers and an integer k, determine whether there exist two adjacent subarrays of length k such that both subarrays are strictly increasing. Specifically, check if there are two subarrays starting at indices a and b (a < b), where:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Both subarrays nums[a..a + k - 1] and nums[b..b + k - 1] are strictly increasing."}),"\n",(0,a.jsx)(n.li,{children:"The subarrays must be adjacent, meaning b = a + k.\nReturn true if it is possible to find two such subarrays, and false otherwise."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}function b(e){const n={blockquote:"blockquote",br:"br",code:"code",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h4,{id:"example-1",children:"Example 1:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"})," nums = [2,5,7,8,9,2,3,4,3,1], k = 3",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," true",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Explanation:"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The subarray starting at index 2 is [7, 8, 9], which is strictly increasing."}),"\n",(0,a.jsx)(n.li,{children:"The subarray starting at index 5 is [2, 3, 4], which is also strictly increasing."}),"\n",(0,a.jsx)(n.li,{children:"These two subarrays are adjacent, so the result is true."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-2",children:"Example 2:"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Input:"})," nums = [1,2,3,4,4,4,4,5,6,7], k = 5",(0,a.jsx)(n.br,{}),"\n",(0,a.jsx)(n.strong,{children:"Output:"})," false"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"constraints",children:"Constraints:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"2 <= nums.length <= 100"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"1 < 2 \\* k <= nums.length"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"-1000 <= nums[i] <= 1000"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}const m={title:"3349. Adjacent Increasing Subarrays Detection I",description:"Given an array nums of n integers and an integer k, determine whether there exist two adjacent subarrays of length k such that both subarrays are strictly increasing. Specifically, check if there are two subarrays starting at indices a and b (a < b)",keywords:["LeetCode","3349. Adjacent Increasing Subarrays Detection I","Easy","Array"],tags:["LeetCode","Easy","Array"]},f="frontMatter.title",g={},y=[{value:"Example 1:",id:"example-1",level:4},{value:"Example 2:",id:"example-2",level:4},{value:"Constraints:",id:"constraints",level:4},{value:"Solution",id:"solution",level:2},{value:"\u89e3\u984c\u601d\u8def",id:"\u89e3\u984c\u601d\u8def",level:3},{value:"\u5fc3\u5f97",id:"\u5fc3\u5f97",level:3}];function j(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"frontmattertitle",children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/adjacent-increasing-subarrays-detection-i",children:m.title})})}),"\n","\n",(0,a.jsx)(u.A,{difficulty:"Easy"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"description",label:"\u984c\u76ee\u63cf\u8ff0",default:!0,children:(0,a.jsxs)(r,{open:!0,children:[(0,a.jsx)("summary",{children:"Description"}),(0,a.jsx)(h,{}),(0,a.jsx)(p,{})]})}),(0,a.jsxs)(l.A,{value:"solution",label:"\u89e3\u7b54",children:[(0,a.jsx)(n.h2,{id:"solution",children:"Solution"}),(0,a.jsx)(c.A,{language:"js",children:o})]})]}),"\n",(0,a.jsx)(n.h3,{id:"\u89e3\u984c\u601d\u8def",children:"\u89e3\u984c\u601d\u8def"}),"\n",(0,a.jsx)(n.p,{children:"\u984c\u76ee\u8981\u627e\u51fa\u662f\u5426\u5b58\u5728\u7b26\u5408\u689d\u4ef6\u7684\u5169\u500b subarray\uff1a"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u5169\u500b subarray \u7684\u9577\u5ea6\u7686\u70ba ",(0,a.jsx)(n.code,{children:"k"})]}),"\n",(0,a.jsx)(n.li,{children:"\u5169\u500b subarray \u90fd\u662f strictly increasing"}),"\n",(0,a.jsx)(n.li,{children:"\u5169\u500b subarray \u8981\u76f8\u9130\uff0c\u4e2d\u9593\u4e0d\u80fd\u6709\u5176\u4ed6\u503c"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\u9996\u5148\u5b9a\u7fa9\u4e00\u500b helper function ",(0,a.jsx)(n.code,{children:"isIncreasing"})," \uff0c\u5224\u65b7\u5169\u500b subarray \u662f\u5426\u90fd\u662f strictly increasing"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"const isIncreasing = (start) => {\n  for (let i = start; i < start + k - 1; i++) {\n    if (nums[i] >= nums[i + 1]) return false;\n  }\n  return true;\n};\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\u63a5\u8457\u4f7f\u7528 ",(0,a.jsx)(n.code,{children:"isIncreasing"})," \u4f86\u5224\u65b7\u662f\u5426\u5b58\u5728\u7b26\u5408\u689d\u4ef6\u7684\u5169\u500b subarray\uff0c\u5169\u8005\u90fd\u56b4\u683c\u905e\u589e\u5c31\u56de\u50b3 true\uff0c\u5426\u5247\u56de\u50b3 false"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"for (let i = 0; i + 2 * k <= nums.length; i++) {\n  // i + 2 * k \u662f\u56e0\u70ba\u6aa2\u67e5\u7684\u662f\u5169\u500b\u9577\u5ea6\u70ba k \u7684\u76f8\u9130 subarray\n  // <= nums.length \u662f\u56e0\u70ba\u6700\u5f8c\u4e00\u500b subarray \u7684\u7bc4\u570d\u4e0d\u80fd\u8d85\u904e\u9663\u5217\u9577\u5ea6\n  if (isIncreasing(i) && isIncreasing(i + k)) {\n    return true;\n  }\n}\nreturn false;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"\u5fc3\u5f97",children:"\u5fc3\u5f97"}),"\n",(0,a.jsx)(n.p,{children:"\u4f7f\u7528 helper function \u4f86\u7c21\u5316\u7d50\u69cb\u3002"})]})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(j,{...e})}):j(e)}},9365:(e,n,r)=>{r.d(n,{A:()=>i});r(6540);var t=r(4164);const a={tabItem:"tabItem_Ymn6"};var s=r(4848);function i({children:e,hidden:n,className:r}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,r),hidden:n,children:e})}},1470:(e,n,r)=>{r.d(n,{A:()=>I});var t=r(6540),a=r(4164),s=r(7559),i=r(3104),l=r(6347),c=r(205),u=r(7485),o=r(1682),d=r(679);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function b(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((({props:{value:e,label:n,attributes:r,default:t}})=>({value:e,label:n,attributes:r,default:t})))}(r);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function p({value:e,tabValues:n}){return n.some((n=>n.value===e))}function m({queryString:e=!1,groupId:n}){const r=(0,l.W6)(),a=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,u.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function f(e){const{defaultValue:n,queryString:r=!1,groupId:a}=e,s=b(e),[i,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[u,o]=m({queryString:r,groupId:a}),[h,f]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,a]=(0,d.Dv)(n);return[r,(0,t.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:a}),g=(()=>{const e=u??h;return p({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),o(e),f(e)}),[o,f,s]),tabValues:s}}var g=r(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(4848);function x({className:e,block:n,selectedValue:r,selectValue:t,tabValues:s}){const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),u=e=>{const n=e.currentTarget,a=l.indexOf(n),i=s[a].value;i!==r&&(c(n),t(i))},o=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const r=l.indexOf(e.currentTarget)+1;n=l[r]??l[0];break}case"ArrowLeft":{const r=l.indexOf(e.currentTarget)-1;n=l[r]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:s.map((({value:e,label:n,attributes:t})=>(0,j.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{l.push(e)},onKeyDown:o,onClick:u,...t,className:(0,a.A)("tabs__item",y.tabItem,t?.className,{"tabs__item--active":r===e}),children:n??e},e)))})}function v({lazy:e,children:n,selectedValue:r}){const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=s.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function k(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,a.A)(s.G.tabs.container,"tabs-container",y.tabList),children:[(0,j.jsx)(x,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function I(e){const n=(0,g.A)();return(0,j.jsx)(k,{...e,children:h(e.children)},String(n))}},2693:(e,n,r)=>{r.d(n,{A:()=>s});r(6540);var t=r(7293),a=r(4848);const s=({difficulty:e,kyu:n})=>{let r=e;n&&(n>=5&&n<=8?r="Easy":n>=3&&n<=4?r="Medium":n>=1&&n<=2&&(r="Hard"));const s=r?{Easy:"tip",Medium:"warning",Hard:"danger"}[r]:"tip",i=r?n?`${n} kyu`:r:"";return(0,a.jsx)(t.A,{type:s,icon:null,title:i,children:(0,a.jsx)(a.Fragment,{})})}}}]);